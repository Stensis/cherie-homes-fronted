{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { createShorthandFactory, getUnhandledProps } from '../../lib';\n/**\n * A search item sub-component for Dropdown component.\n */\n\nvar DropdownSearchInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(DropdownSearchInput, _Component);\n\n  function DropdownSearchInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    return _this;\n  }\n\n  var _proto = DropdownSearchInput.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        autoComplete = _this$props.autoComplete,\n        className = _this$props.className,\n        tabIndex = _this$props.tabIndex,\n        type = _this$props.type,\n        value = _this$props.value;\n    var classes = cx('search', className);\n    var rest = getUnhandledProps(DropdownSearchInput, this.props);\n    return /*#__PURE__*/React.createElement(\"input\", _extends({}, rest, {\n      \"aria-autocomplete\": \"list\",\n      autoComplete: autoComplete,\n      className: classes,\n      onChange: this.handleChange,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }));\n  };\n\n  return DropdownSearchInput;\n}(Component);\n\nDropdownSearchInput.handledProps = [\"as\", \"autoComplete\", \"className\", \"tabIndex\", \"type\", \"value\"];\nDropdownSearchInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An input can have the auto complete. */\n  autoComplete: PropTypes.string,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The HTML input type. */\n  type: PropTypes.string,\n\n  /** Stored value. */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nDropdownSearchInput.defaultProps = {\n  autoComplete: 'off',\n  type: 'text'\n};\nDropdownSearchInput.create = createShorthandFactory(DropdownSearchInput, function (type) {\n  return {\n    type: type\n  };\n});\nexport default DropdownSearchInput;","map":null,"metadata":{},"sourceType":"module"}