{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { createShorthandFactory, customPropTypes } from '../../lib';\nimport AccordionTitle from './AccordionTitle';\nimport AccordionContent from './AccordionContent';\n/**\n * A panel sub-component for Accordion component.\n */\n\nvar AccordionPanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AccordionPanel, _Component);\n\n  function AccordionPanel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleTitleOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n\n          _invoke(_this.props, 'onTitleClick', e, titleProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = AccordionPanel.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        content = _this$props.content,\n        index = _this$props.index,\n        title = _this$props.title;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, AccordionTitle.create(title, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active,\n        index: index\n      },\n      overrideProps: this.handleTitleOverrides\n    }), AccordionContent.create(content, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active\n      }\n    }));\n  };\n\n  return AccordionPanel;\n}(Component);\n\nAccordionPanel.handledProps = [\"active\", \"content\", \"index\", \"onTitleClick\", \"title\"];\nAccordionPanel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n\n  /** A shorthand for Accordion.Content. */\n  content: customPropTypes.itemShorthand,\n\n  /** A panel index. */\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: PropTypes.func,\n\n  /** A shorthand for Accordion.Title. */\n  title: customPropTypes.itemShorthand\n} : {};\nAccordionPanel.create = createShorthandFactory(AccordionPanel, null);\nexport default AccordionPanel;","map":null,"metadata":{},"sourceType":"module"}