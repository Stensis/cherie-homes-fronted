{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _has from \"lodash-es/has\";\nimport _invoke from \"lodash-es/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { customPropTypes, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\nimport Modal from '../../modules/Modal';\n/**\n * A Confirm modal gives the user a choice to confirm or cancel an action.\n * @see Modal\n */\n\nvar Confirm = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Confirm, _Component);\n\n  function Confirm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleCancel = function (e) {\n      _invoke(_this.props, 'onCancel', e, _this.props);\n    };\n\n    _this.handleCancelOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _this.handleCancel(e);\n        }\n      };\n    };\n\n    _this.handleConfirmOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(_this.props, 'onConfirm', e, _this.props);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = Confirm.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        cancelButton = _this$props.cancelButton,\n        confirmButton = _this$props.confirmButton,\n        content = _this$props.content,\n        header = _this$props.header,\n        open = _this$props.open,\n        size = _this$props.size;\n    var rest = getUnhandledProps(Confirm, this.props); // `open` is auto controlled by the Modal\n    // It cannot be present (even undefined) with `defaultOpen`\n    // only apply it if the user provided an open prop\n\n    var openProp = {};\n    if (_has(this.props, 'open')) openProp.open = open;\n    return /*#__PURE__*/React.createElement(Modal, _extends({}, rest, openProp, {\n      size: size,\n      onClose: this.handleCancel\n    }), Modal.Header.create(header, {\n      autoGenerateKey: false\n    }), Modal.Content.create(content, {\n      autoGenerateKey: false\n    }), /*#__PURE__*/React.createElement(Modal.Actions, null, Button.create(cancelButton, {\n      autoGenerateKey: false,\n      overrideProps: this.handleCancelOverrides\n    }), Button.create(confirmButton, {\n      autoGenerateKey: false,\n      defaultProps: {\n        primary: true\n      },\n      overrideProps: this.handleConfirmOverrides\n    })));\n  };\n\n  return Confirm;\n}(Component);\n\nConfirm.handledProps = [\"cancelButton\", \"confirmButton\", \"content\", \"header\", \"onCancel\", \"onConfirm\", \"open\", \"size\"];\nConfirm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** The cancel button text. */\n  cancelButton: customPropTypes.itemShorthand,\n\n  /** The OK button text. */\n  confirmButton: customPropTypes.itemShorthand,\n\n  /** The ModalContent text. */\n  content: customPropTypes.itemShorthand,\n\n  /** The ModalHeader text. */\n  header: customPropTypes.itemShorthand,\n\n  /**\n   * Called when the Modal is closed without clicking confirm.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * Called when the OK button is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onConfirm: PropTypes.func,\n\n  /** Whether or not the modal is visible. */\n  open: PropTypes.bool,\n\n  /** A Confirm can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen'])\n} : {};\nConfirm.defaultProps = {\n  cancelButton: 'Cancel',\n  confirmButton: 'OK',\n  content: 'Are you sure?',\n  size: 'small'\n};\nexport default Confirm;","map":null,"metadata":{},"sourceType":"module"}